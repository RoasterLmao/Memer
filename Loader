if game:IsLoaded() == false then
	repeat wait() until game:IsLoaded() == true
end

if table.find(loadstring(game:HttpGet"https://raw.githubusercontent.com/fa899/Memer/main/Whitelist.lua")().Owner, game.Players.LocalPlayer.UserId) then
	shared.MemerPrivate = true -- workspace/memerprivate/gameid.lua
end

if table.find(loadstring(game:HttpGet"https://raw.githubusercontent.com/fa899/Memer/main/Whitelist.lua")().Owner, game.Players.LocalPlayer.UserId) then
	shared.MemerPremium = true -- workspace/memerpremium/gameid.lua
end

if makefolder and writefile and isfile then
   makefolder("memerhub")
   makefolder("memerhub/decals")
   makefolder("memerhub/custommodules")
else
   messagebox("Your exploit does not support makefolder, writefile and isfile, shutdowned game!", "Not supported exploit!", 1)
   wait()
   game:Shutdown()
end

local qot = syn and syn.queue_on_teleport or queue_on_teleport or fluxus and fluxus.queue_on_teleport or function() end

if getgenv == nil then
	game:Shutdown()
end

getgenv().plr = game.Players.LocalPlayer

if qot == nil then
	game.Players.LocalPlayer:Kick("queue_on_teleport does not work on your executor, please get a better executor.\nFREE: Krnl, Fluxus, Comet\nPAID: Synapse X, or others")
	--return error("queue_on_teleport does not work on your executor, please get a better executor.\nFREE: Krnl, Fluxus, Comet\nPAID: Synapse X, or others")
end

game.Players.LocalPlayer.OnTeleport:Connect(function(tpState)
	if tpState == Enum.TeleportState.Started then
		qot('loadstring(game:HttpGet("https://raw.githubusercontent.com/fa899/Memer/main/Loader"))()') -- Load script on Teleport
	end
end)

function getCodefromURL(url)
	return game:HttpGet(url)
end

local req = http and http_request or request or syn and syn.request

function isSupportedScript(Id)
	if (type(Id) ~= "string") then Id = tostring(Id) end
	local suc,err = pcall(function()
		local Code = game:HttpGet("https://raw.githubusercontent.com/fa899/Memer/main/SupportedGames.md/"..Id)
	end)
	return suc
end

function loadScript(Id)
	local id
	if type(Id) ~= "string" then
		id = tostring(Id) 
	end

	return loadstring(game:HttpGet("https://raw.githubusercontent.com/fa899/Memer/main/SupportedGames.md/"..id or "uni"))()
end

loadScript(game.PlaceId) -- loadScript(<number>)
